// Generated by CoffeeScript 1.4.0

!(function(context, definition) {
  if ('function' === typeof require && typeof exports === typeof module) {
    return module.exports = definition;
  }
  return context.MiniCoffeeCup = definition;
})(this, (function() {
  var c;
  c = function(o, templates) {
    this.o = o != null ? o : {};
    this.templates = templates != null ? templates : {};
  };
  c.prototype.render = function(f, locals) {
    var block, doctype, l, t, tag, text, _format, _i, _indent, _indentation, _linebreak, _ref;
    t = '';
    l = 0;
    _format = this.o.format || false;
    _indentation = (this.o.format || '') && (this.o.indentation || '  ');
    _linebreak = (this.o.format || '') && (this.o.linebreak || "\n");
    _indent = function() {
      return (new Array(l)).join(_indentation);
    };
    tag = function(p, s) {
      var _this = this;
      return function(h) {
        l++;
        if (typeof h === 'function') {
          t += (function() {
            t = '';
            h.call(locals);
            if (t !== '') {
              t = _linebreak + t + _indent();
            }
            return t = _indent() + p + t + s + _linebreak;
          })();
        } else {
          t += _indent() + p + (typeof h === 'undefined' ? '' : h) + s + _linebreak;
        }
        return l--;
      };
    };
    text = function(t) {
      return tag('', t);
    };
    doctype = function(v) {
      return tag((v === 5 ? '<!doctype html>' : ''), '')();
    };
    block = function(t, h) {
      return tag('{{' + t + '}}', '{{/' + (t.split(/ +/)[0]) + '}}')(h);
    };
    for (_i in _ref = ['html', 'head', 'body', 'p', 'ul', 'li', 'a', 'table', 'thead', 'tr', 'th', 'tbody', 'td', 'title']) {
      eval("" + _ref[_i] + " = tag('<'+_ref[_i]+'>', '</'+_ref[_i]+'>')");
    }
    for (_i in _ref = ['link', 'br', 'hr']) {
      eval("" + _ref[_i] + " = tag('<'+_ref[_i]+'/>')");
    }
    eval("(" + f + ").call(locals)");
    return t;
  };
  return c;
})());
